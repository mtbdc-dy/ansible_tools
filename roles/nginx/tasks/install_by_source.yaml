- name: determine whether {{ nginx_install_dir }} exists
  stat:
    path: "{{ nginx_install_dir }}"
  register: nginx_result

# 加入目标主机已经安装了，则报错，并退出该 剧本
- name: output information
  fail:
    msg: "The target host has been installed and withdrawn from the playbook."
  when: nginx_result.stat.exists

- name: upload nginx source code
  copy:
    src: "{{ item.src }}"
    dest: "{{  item.dest }}"
    mode: 0755
  with_items:
    - { src: "{{ nginx_source_code }}", dest: "{{ remote_temp_dir }}/{{ nginx_source_code }}" }
    - { src: "{{ pcre_source_code }}", dest: "{{ remote_temp_dir }}/{{ pcre_source_code }}"}
    - { src: "{{ openssl_source_code }}", dest: "{{ remote_temp_dir }}/{{ openssl_source_code }}" }
    - { src: "{{ zlib_source_code }}", dest: "{{ remote_temp_dir }}/{{ zlib_source_code }}" }
    - { src: compile_nginx.sh, dest: "{{ remote_temp_dir }}/compile_nginx.sh" }

- name: create nginx group
  group:
    name: "{{ nginx_group }}"
    state: present

- name: create nginx user
  user:
    name: "{{ nginx_user }}"
    comment: "nginx web user"
    shell: /usr/bin/false
    create_home: no
    group: "{{ nginx_group }}"
    system: yes
  
- name: create nginx installation directory
  file:
    path: "{{ nginx_install_dir }}"
    state: directory
    owner: "{{ nginx_user }}"
    group: "{{ nginx_group }}"

- name: compile nginx source code
  command:
    "{{ remote_temp_dir }}/compile_nginx.sh"
  environment:
    REMOTE_TEMP_DIR: "{{ remote_temp_dir }}"
    NGINX_INSTALL_DIR: "{{ nginx_install_dir }}"
    NGINX_SOURCE_CODE: "{{ nginx_source_code }}"
    PCRE_SOURCE_CODE: "{{ pcre_source_code }}"
    OPENSSL_SOURCE_CODE: "{{ openssl_source_code }}"
    ZLIB_SOURCE_CODE: "{{ zlib_source_code }}"
    NGINX_USER: "{{ nginx_user }}"
    NGINX_GROUP: "{{ nginx_group }}"
  register: compile_result
  when: ansible_env.SHELL == '/bin/bash'

- name: configure nginx
  template:
    src: nginx.conf.j2
    dest: "{{ nginx_install_dir }}/conf/nginx.conf"
    mode: 0644
  notify:
    - create nginx logs
    - change nginx install directory property

- name: set nginx selt boot
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: root
    group: root
    mode: "{{ item.mode }}"
  notify:
    - reload nginx service
    - start nginx
  with_items:
    - { src: "nginx.sh.j2", dest: "/etc/init.d/nginx", mode: "0755", os_distribution: "CentOS", os_major_version: "6" }
    - { src: "nginx.service.j2", dest: "/usr/lib/systemd/system/nginx.service", mode: "0644", os_distribution: "CentOS", os_major_version: "7" }
  when: ansible_distribution == item.os_distribution and ansible_distribution_major_version == item.os_major_version

- name: delete source file
  file:
    path: "{{ item }}"
    state: absent
  with_items:
    - "{{ remote_temp_dir }}/{{ nginx_source_code }}"
    - "{{ remote_temp_dir }}/{{ openssl_source_code }}"
    - "{{ remote_temp_dir }}/{{ pcre_source_code }}"
    - "{{ remote_temp_dir }}/{{ zlib_source_code }}"
    - "{{ remote_temp_dir }}/compile_nginx.sh"